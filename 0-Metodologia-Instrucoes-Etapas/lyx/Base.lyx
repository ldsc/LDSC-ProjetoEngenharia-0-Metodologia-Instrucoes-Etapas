#LyX 2.4 created this file. For more info see https://www.lyx.org/
\lyxformat 620
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass extbook
\begin_preamble
%-----------------------------------------------------------------
% Para incluir formatações especificas para apresentações
%-----------------------------------------------------------------
%https://tex.stackexchange.com/questions/5894/latex-conditional-expression
% Abaixo inserimos o pacote etoolbox que permite a gestão de if..else
\usepackage{etoolbox}
% Cria o flag
\newtoggle{FormatoApresentacaoTRUE}
\newtoggle{IncluirBibliografiaNoCapituloTRUE}
%Seta o flag - deixe true se for para gerar apresentação de aula e false para formato livro
%\toggletrue{FormatoApresentacaoTRUE}
\togglefalse{FormatoApresentacaoTRUE}
%\toggletrue{IncluirBibliografiaNoCapituloTRUE}
\togglefalse{IncluirBibliografiaNoCapituloTRUE}

% Para usar no meio dos arquivos do lyx crie um comando latex e cole o texto abaixo
%\iftoggle{FormatoApresentacaoTRUE}{..verdadeiro..}{..falso..}
%\iftoggle{FormatoApresentacaoTRUE}{\newpage}{}

%---------------------------------------------------------------
% Para adicionar/excluir uma seção inteira
%---------------------------------------------------------------
%https://tex.stackexchange.com/questions/193295/lyx-conditional-sections
% Abaixo criamos um novo if
\newif\ifIncluirSecaoProgramacaoAvancada
%\FormatoApresentacaoWidefalse
\IncluirSecaoProgramacaoAvancadatrue
% Para usar
% \ifIncluirSecaoProgramacaoAvancada no início do blobo
% \fi para finalizar o bloco

%---------------------------------------------------------------
%GERAL
%---------------------------------------------------------------
\usepackage{verbatim}
%%\usepackage{algorithm}
\usepackage{fancyvrb}
\usepackage{keyval} 
\usepackage{indentfirst}
%\usepackage{color}
\usepackage{xcolor}
\definecolor{azulclaro}{rgb}{0.6,1,1}%   rgb color model
\definecolor{BLACK}{rgb}{0,0,0}%   rgb color model
\definecolor{BLUE}{rgb}{0,0,1}%   rgb color model

%Informa que vai usar o pacote listings, disponibilizado em /usr/share/texmf/doc/latex/styles/listings.dvi
\usepackage{listings}

%Define um novo comando, chamado lst
%observe que lst chama o comando  lstinputlisting.
\newcommand{\lst}[2]{%
    \noindent\rule[-1ex]{\textwidth}{0.3mm}\vspace{-1ex}
    \lstinputlisting[caption={#2},label={#1},stringspaces=false,frame={tb},lineskip=-1pt,extendedchars=true,%
    basicstyle=\footnotesize\tt,labelstep=1,labelstyle=\tiny,indent=2em,language=Java,breaklines]{#1}
    \vspace{1ex}%
}

%\listfiles
%\usepackage[]{hyperref}

%\usepackage{mathptmx}  % instead of package times

%\usepackage[scaled=0.9]{helvet} % or [scaled=0.92], if you like

%% Pacote de citações para formato abnt
%%\usepackage[num]{abntcite}
%%\usepackage[alf]{abntcite}

%%\usepackage[cam,a4,center]{crop}
%% a4 é o tamanho físico
%% center é para centralizar
%% cam inclui quatro marcas diferentes

%%\usepackage[cam,width=20truecm,height=28truecm,center]{crop}
%\usepackage[cam,width=18truecm,height=26truecm,center]{crop}

%\noindent
\end_preamble
\options brazil
\use_default_options false
\maintain_unincluded_children no
\language brazilian
\language_package default
\inputencoding auto-legacy
\fontencoding auto
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_roman_osf false
\font_sans_osf false
\font_typewriter_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize 10
\spacing single
\use_hyperref false
\papersize custom
\use_geometry true
\use_package amsmath 2
\use_package amssymb 2
\use_package cancel 1
\use_package esint 0
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 0
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 0
\use_formatted_ref 0
\use_minted 0
\use_lineno 0
\index Índice
\shortcut idx
\color #008000
\end_index
\paperwidth 14cm
\paperheight 24cm
\leftmargin 25mm
\topmargin 20mm
\rightmargin 10mm
\bottommargin 20mm
\headheight 10mm
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle fancy
\tablestyle default
\bullet 0 5 33 -1
\tracking_changes false
\output_changes false
\change_bars false
\postpone_fragile_content false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\docbook_table_output 0
\docbook_mathml_prefix 1
\end_header

\begin_body

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
Manuais LATEX
\end_layout

\begin_layout Plain Layout
https://pt.overleaf.com/learn/latex
\end_layout

\begin_layout Plain Layout
Cores para listagens
\end_layout

\begin_layout Plain Layout
http://latexcolor.com/
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

% Veja fancyhdr.dvi para detalhes.
\end_layout

\begin_layout Plain Layout

% O cabeçalho muda de acorda com o lado
\end_layout

\begin_layout Plain Layout

% L=left,
 R=right,
 E=even,
 O=odd
\end_layout

\begin_layout Plain Layout

%
\backslash
fancyhead[LE,RO]{Metodologia para Desenvolvimento do Projeto de Engenharia}
\end_layout

\begin_layout Plain Layout

%
\backslash
fancyhead[LO,RE]{LENEP/CCT/UENF}
\end_layout

\begin_layout Plain Layout


\backslash
fancyhead[L]{Metodologia para Desenvolvimento do Projeto de Engenharia}
\end_layout

\begin_layout Plain Layout


\backslash
fancyhead[C]{}
\end_layout

\begin_layout Plain Layout


\backslash
fancyhead[R]{}
\end_layout

\begin_layout Plain Layout

% o Rodapé 
\end_layout

\begin_layout Plain Layout


\backslash
fancyfoot[L]{} 
\end_layout

\begin_layout Plain Layout


\backslash
fancyfoot[C]{}
\end_layout

\begin_layout Plain Layout


\backslash
fancyfoot[R]{
\backslash
thepage}
\end_layout

\begin_layout Plain Layout


\backslash
thispagestyle{empty}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
definecolor{brown}{rgb}{0.59,
 0.29,
 0.0}
\end_layout

\begin_layout Plain Layout


\backslash
definecolor{lightgray}{rgb}{0.8,0.8,0.8} 
\end_layout

\begin_layout Plain Layout


\backslash
definecolor{myred1}{rgb}{0.75,0.0,0} 
\end_layout

\begin_layout Plain Layout


\backslash
definecolor{myred2}{rgb}{0.9,0.0,0} 
\end_layout

\begin_layout Plain Layout


\backslash
definecolor{mygreen1}{rgb}{0,0.7,0} 
\end_layout

\begin_layout Plain Layout


\backslash
definecolor{mygreen2}{rgb}{0,0.9,0} 
\end_layout

\begin_layout Plain Layout


\backslash
definecolor{myblue1}{rgb}{0,0,0.7} 
\end_layout

\begin_layout Plain Layout


\backslash
definecolor{myblue2}{rgb}{0,0,0.9}
\end_layout

\begin_layout Plain Layout


\backslash
definecolor{mygray1}{rgb}{0.5,0.5,0.5} 
\end_layout

\begin_layout Plain Layout


\backslash
definecolor{mygray2}{rgb}{0.7,0.7,0.7} 
\end_layout

\begin_layout Plain Layout


\backslash
definecolor{mymauve}{rgb}{0.58,0,0.82}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
Define estilo de listagem em C++
\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
lstset{style=C++}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
lstset{style=iC++,
 numbers=none}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
lstset{style=out}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
lstset{style=out,xleftmargin=1cm}
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
Exemplo de uso:
\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
lstset{style=iC++}
\end_layout

\begin_layout Plain Layout


\backslash
lstinputlisting[caption={Usando os tipos pré-definidos de C++.},
 label={tipos}] {../listagens/Cap-09/UsandoOsTiposPre-Definidos.cpp}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
lstinputlisting[style=C++,caption={Usando os tipos pré-definidos de C++.},
 label={tipos}] {../listagens/Cap-09/UsandoOsTiposPre-Definidos.cpp}
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
Exemplo de uso:
\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
lstset{style=C++} 
\end_layout

\begin_layout Plain Layout


\backslash
lstinputlisting[caption={Usando os tipos pré-definidos de C++.
 Exemplo uso typewriter e underscore 
\backslash
texttt{source
\backslash
_location}},
 label={tipos}] {../listagens/Cap-09/UsandoOsTiposPre-Definidos.cpp}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
lstinputlisting[style=C++,caption={Usando os tipos pré-definidos de C++.},
 label={tipos}] {../listagens/Cap-09/UsandoOsTiposPre-Definidos.cpp}
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
Como definir cores para 
\end_layout

\begin_layout Plain Layout

\backslash
#define,
 
\backslash
#ifdef,
 
\backslash
#ifndef,
 
\backslash
#undef,
 
\backslash
#if,
 
\backslash
#else,
 
\backslash
#elif,
 
\backslash
#endif 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
lstdefinestyle{C++}{
\end_layout

\begin_layout Plain Layout

% tipo de bordas
\end_layout

\begin_layout Plain Layout

frame=lines,
\end_layout

\begin_layout Plain Layout

% tamanho da fonte e tipo de fonte
\end_layout

\begin_layout Plain Layout

basicstyle=
\backslash
small
\backslash
ttfamily,
\end_layout

\begin_layout Plain Layout

% linguagem
\end_layout

\begin_layout Plain Layout

language=[ISO]C++,
\end_layout

\begin_layout Plain Layout

% numeração
\end_layout

\begin_layout Plain Layout

numbers=left,
 
\end_layout

\begin_layout Plain Layout

numberstyle=
\backslash
tiny,
 
\end_layout

\begin_layout Plain Layout

stepnumber=1,
 
\end_layout

\begin_layout Plain Layout

numbersep=1pt,
 
\end_layout

\begin_layout Plain Layout

firstnumber=1,
 
\end_layout

\begin_layout Plain Layout

% formatação
\end_layout

\begin_layout Plain Layout

breakatwhitespace=false,
\end_layout

\begin_layout Plain Layout

breaklines=true,
\end_layout

\begin_layout Plain Layout

extendedchars=true,
\end_layout

\begin_layout Plain Layout

% cores
\end_layout

\begin_layout Plain Layout

backgroundcolor=
\backslash
color{white},
\end_layout

\begin_layout Plain Layout

commentstyle=
\backslash
color{lightgray},
 
\end_layout

\begin_layout Plain Layout

keywordstyle=
\backslash
color{blue},
\end_layout

\begin_layout Plain Layout

morekeywords={*,...},
 
\end_layout

\begin_layout Plain Layout

stringstyle=
\backslash
color{mygreen1},
\end_layout

\begin_layout Plain Layout

%
\end_layout

\begin_layout Plain Layout

% Palavras chave BLUE
\end_layout

\begin_layout Plain Layout

emph={ bool,
 char,
 char8_t,
 char16_t,
 char32_t,
 wchar_t,short,
 int,
 long,
 long long,
 float,
 double,
 long double,
 void,
 const,
 extern,
 mutable,
 register,
 signed,
 static,
 typedef,
 unsigned,
 volatile,
 using,
 typename,
 auto,
 constexpr,
 decltype,
 class,
 enum,
 struct,
 union,
 const_cast,
 dynamic_cast,
 reinterpret_cast,
 static_cast,
 try,
 throw,
 catch,
 noexcept,
 delete,
 new,
 nullptr,
 static,
 const,
 friend,
 virtual,
 operator,
 namespace,
 sizeof,
 template,
 typename,
 concept,
 class,
  delete,
 friend,
 explicit,
 this,
 typeid,
 private,
 protected,
 public,
 alignas,
 alignof,
 asm,
 concept,
 consteval,
 constexpr,
 constinit export,
 extern,
 inline,
 static_assert,
 requires,
 template,
 typename,
 mutable,
  volatile,
 co_await,
 co_return,
 co_yield,
 atomic_cancel,
 atomic_commit,
 atomic_noexcept,
 import,
 module,
 synchronized,co_await,
 co_return,
 co_yield,
 reflexpr },
 
\end_layout

\begin_layout Plain Layout

emphstyle={
\backslash
color{blue}},
\end_layout

\begin_layout Plain Layout

%
\end_layout

\begin_layout Plain Layout

% Estruturas de controle e de repeticao RED
\end_layout

\begin_layout Plain Layout

emph={[2] and,
 and_eq,
 bitand,
 bitor,
 compl,
 false,
 not,
 not_eq,
 or,
 or_eq,
 true,
 xor,
 xor_eq,
 break,
 case,
 continue,
 default,
 do,
 else,
 for,
 goto,
 if,
 return,
 switch,
 while  } ,
\end_layout

\begin_layout Plain Layout

emphstyle={[2]
\backslash
color{red}},
\end_layout

\begin_layout Plain Layout

%
\end_layout

\begin_layout Plain Layout

% Arquivos de inclusao mymauve (note que alguns poderao aparecer com outra cor,
 ocorre quando nome arquivo igual ao nome da classe)
\end_layout

\begin_layout Plain Layout

emph={[3] algorithm ,
 atomic ,backward ,bits ,bitset ,cassert ,ccomplex ,cctype ,cerrno ,cfenv ,cfloat ,chrono ,cinttypes ,ciso646 ,climits ,clocale ,cmath ,complex ,csetjmp ,csignal ,cstdalign ,cstdarg ,cstdbool ,cstddef ,cstdint ,cstdio ,cstdlib ,cstring ,ctgmath ,ctime ,cwchar ,cwctype ,debug ,decimal ,exception ,ext ,filesystem,
 fstream ,functional  ,initializer_list ,iomanip ,ios ,iosfwd ,iostream ,istream ,iterator ,limits ,locale ,numeric ,ostream ,profile ,random ,ratio ,regex ,scoped_allocator ,sstream ,stack ,stdexcept  ,streambuf ,system_error ,tr1 ,tr2 ,typeindex ,typeinfo ,type_traits ,utility ,x86_64-redhat-linux ,complex   } ,
 
\end_layout

\begin_layout Plain Layout

emphstyle={[3]
\backslash
color{green}},
\end_layout

\begin_layout Plain Layout

%
\end_layout

\begin_layout Plain Layout

% Strings VERDE2
\end_layout

\begin_layout Plain Layout

emph={[4] string,
 string_view,
 wstring,
 u16string,u32string } ,
\end_layout

\begin_layout Plain Layout

emphstyle={[4]
\backslash
color{mygreen2}
\backslash
bfseries},
\end_layout

\begin_layout Plain Layout

%
\end_layout

\begin_layout Plain Layout

% Containers purple
\end_layout

\begin_layout Plain Layout

emph={[5]  array,
 vector,
 deque,
 forward_list,
 list,
 set,
 multiset,
 map,
 multimap,
 unordered_set,
 unordered_multiset,
 unordered_map,
 unordered_multimap ,
 pair,
 tuple,
 basic_string },
\end_layout

\begin_layout Plain Layout

emphstyle={[5]
\backslash
color{brown}
\backslash
bfseries},
\end_layout

\begin_layout Plain Layout

%
\end_layout

\begin_layout Plain Layout

%Algoritmos genericos VERMELHO2
\end_layout

\begin_layout Plain Layout

emph={[6]  accumulate,
 find,
 max,
 adjacent_find,
 find_if,
 max_element,
 binary_search,
 min,
 count,
 find_first_of,
 for_each,
 min_element,
 count_if,
 includes,
 mismatch,
 equal,
 lexicographical_compare,
 nth_element,
 equal_range,
 lower_bound,
 mismatch,
 search,
 search_n,
 find_end,
 upper_bound,
 copy,
 remove_if,
 copy_backward,
 replace,
 fill,
 replace_copy,
 fill_n,
 replace_copy_if,
 generate,
 replace_if,
 generate_n,
 reverse,
 inplace_merge,
 reverse_copy,
 iter_swap,
 rotate,
  make_heap,
 rotate_copy,
 merge,
 set_difference,
 nth_element,
 next_permutation,
 set_intersection,
 set_symmetric_difference,
 partial_sort,
 set_union,
 partial_sort_copy,
 sort,
 partition,
 sort_heap,
 prev_permutation,
 stable_partition,
 push_heap,
 stable_sort,
 pop_heap,
 swap,
 random_shuffle,
 swap_ranges,
 remove,
 transform,
 unique,
 unique_copy,
 remove_copy,
 remove_copy_if,
 all_of,
 any_of,
 none_of,
 find_if_not,
 copy_if,
 copy_n,
 move,
 move_backward,
 suffle,
 is_partitioned,
 partition_copy,
 partition_point,
 is_sorted,
 is_sorted_until,
 is_heap,
 is_heap_until,
 minmax,
 minmax_element,
 is_permutation,
 iota,
 uninitialized_copy_n,
 for_each_n,
 sample,
 clamp,
 reduce,
 exclusive_scan,
 inclusive_scan,
 transform_reduce,
 transform_exclusive_scan,
 transform_inclusive_scan,
 uninitialized_move,
 uninitialized_move_n,
 uninitialized_default_construct,
 uninitialized_default_construct_n,
 uninitialized_value_construct,
 uninitialized_value_construct_n,
 destroy,
 destroy_at,
 destroy_n,
 shift_left,
 shift_right,
 compare_3way,
 lexicographical_compare_3way } ,
\end_layout

\begin_layout Plain Layout

emphstyle={[6]
\backslash
color{olive}},
\end_layout

\begin_layout Plain Layout

%
\end_layout

\begin_layout Plain Layout

% Processamento Paralelo Orange/laranja
\end_layout

\begin_layout Plain Layout

emph={[7] thread,
 yield,
 get_id,
 sleep_for,
 sleep_until,
 thread_local,
 memory,
 mutex,
 parallel,
 mutex,
 timed_mutex,
 recursive_mutex,
 shared_mutex,
 shared_timed_mutex,
 lock_guard,
 scoped_lock,
 unique_lock,
 shared_lock,
 defer_lock_t,
 try_to_lock_t,
 adopt_lock_t,
 try_lock,
 lock,
 once_flag,
 call_once,
 condition_variable,
 condition_variable_any,
 notify_all_at_thread_exit,
 cv_status,
 promise,
 packaged_task,
 future,
 shared_future,
 async,
 launch,
 future_status,
 future_error,
 future_category,
 future_errc,
 hardware_destructive_interference_size,
 hardware_constructive_interference_size  } ,
\end_layout

\begin_layout Plain Layout

emphstyle={[7]
\backslash
color{mymauve}},
\end_layout

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
O style=iC++ é o C++ sem numeração;
 pode colocar outra cor de fundo
\end_layout

\begin_layout Plain Layout
white
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
lstdefinestyle{iC++}
\end_layout

\begin_layout Plain Layout

{ style=C++,
\end_layout

\begin_layout Plain Layout

numbers=none,
 
\end_layout

\begin_layout Plain Layout

backgroundcolor=
\backslash
color{white},
\end_layout

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset Note Note
status open

\begin_layout Plain Layout
Define estilo de saida gerada por programa executado
\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
lstdefinestyle{out} 
\end_layout

\begin_layout Plain Layout

{frame=lines,numbers=none,
 caption=,
 language=,
 breaklines=true,
 backgroundcolor=
\backslash
color{azulclaro},
 extendedchars=true,
 basicstyle=
\backslash
footnotesize
\backslash
ttfamily}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
Define estilo de saida gerada por programa executado em itálico
\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
lstdefinestyle{italico} {frame=lines,numbers=none,
 caption=,
 language=,
 breaklines=true,
 backgroundcolor=
\backslash
color[rgb]{1,.87,0},
 extendedchars=true,
 basicstyle=
\backslash
footnotesize
\backslash
ttfamily}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
Define estilo de saida para listagens/scripts do Gnuplot
\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
lstdefinestyle{Gnuplot} {caption=,language=Gnuplot,breaklines=true,backgroundcolor=
\backslash
color{azulclaro},extendedchars=true,basicstyle=
\backslash
footnotesize
\backslash
ttfamily}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
Define estilo de saida para saída de comandos do terminal (em itálico)
\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
lstdefinestyle{Bash} 
\end_layout

\begin_layout Plain Layout

{caption=,language=bash,numbers=none,breaklines=true,backgroundcolor=
\backslash
color[rgb]{1,.87,0},extendedchars=true,basicstyle=
\backslash
footnotesize
\backslash
ttfamily}
\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
lstdefinestyle{bash} 
\end_layout

\begin_layout Plain Layout

{caption=,language=bash,numbers=none,breaklines=true,backgroundcolor=
\backslash
color[rgb]{1,.87,0},extendedchars=true,basicstyle=
\backslash
footnotesize
\backslash
ttfamily}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
Define estilo de saida para arquivos Makefile
\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
lstdefinestyle{make} {caption=,language=make,breaklines=true,backgroundcolor=
\backslash
color{azulclaro},extendedchars=true,basicstyle=
\backslash
footnotesize
\backslash
ttfamily}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
Define o estilo padrão como sendo C++
\end_layout

\begin_layout Plain Layout
para mudar escolha uma das opções:
\end_layout

\begin_layout Plain Layout
C++ 
\end_layout

\begin_layout Plain Layout
(listagem linha no topo e abaixo,
 toda colorida de acordo com palavra chave,
 numerada)
\end_layout

\begin_layout Plain Layout
out 
\end_layout

\begin_layout Plain Layout
(fundo colorido,
 sem numeração)
\end_layout

\begin_layout Plain Layout
Makefile 
\end_layout

\begin_layout Plain Layout
(estilo de arquivo Makefile)
\end_layout

\begin_layout Plain Layout
Gnuplot 
\end_layout

\begin_layout Plain Layout
(estilo de arquivo gnuplot)
\end_layout

\begin_layout Plain Layout
bash (comandos de terminal)
\end_layout

\begin_layout Plain Layout
make (arquivos makefile)
\end_layout

\begin_layout Plain Layout
italico (itálico)
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
lstset{style=C++}
\end_layout

\end_inset


\end_layout

\end_body
\end_document
